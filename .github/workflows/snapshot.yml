name: Build Lore Snapshot (Notion API)

on:
  schedule:
    - cron: "0 5 * * *"   # runs daily at 05:00 UTC
  workflow_dispatch: {}    # manual trigger allowed

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      CHAR_DB: "2992fb8c325a8026a3b5cbd96f332c17"
      SESS_DB: "2992fb8c325a80d9aed0d0320813a063"
      PARTY_PAGE: "2992fb8c325a80efbb32edb10a21c3ba"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install requests

      - name: Build snapshot
        run: |
          if [ -f scripts/build_snapshot_api.py ]; then
            python scripts/build_snapshot_api.py
          elif [ -f build_snapshot_api.py ]; then
            python build_snapshot_api.py
          else
            echo "❌ build_snapshot_api(.py) not found"; exit 1
          fi
          echo "Contents of build/:"
          ls -lh build/

      - name: Commit artifacts
        run: |
          git config user.name "snapshot-bot"
          git config user.email "snapshot-bot@users.noreply.github.com"
          # Add compendium parts OR single compendium
          if ls build/lore_compendium_part_*.md >/dev/null 2>&1; then
            git add build/lore_compendium_part_*.md
          elif [ -f build/lore_compendium.md ]; then
            git add build/lore_compendium.md
          fi
          git add build/lore_index.md build/index.json build/lore_snapshot.zip || true
          git commit -m "snapshot: $(date -u +'%F %T') UTC" || echo "No changes"
          git push || true

      - name: Copy snapshot to docs for GitHub Pages
        run: |
          mkdir -p docs
          # Copy compendium parts OR fallback single compendium
          if ls build/lore_compendium_part_*.md >/dev/null 2>&1; then
            cp build/lore_compendium_part_*.md docs/
          elif [ -f build/lore_compendium.md ]; then
            cp build/lore_compendium.md docs/
          fi
          cp build/lore_index.md build/index.json build/lore_snapshot.zip docs/ || true
          touch docs/.nojekyll
          echo "# World of Lorecraft Snapshot" > docs/index.md
          echo "" >> docs/index.md
          echo "Latest daily export from Notion." >> docs/index.md
          echo "" >> docs/index.md
          echo "## Compendium Files" >> docs/index.md
          for f in $(ls docs/lore_compendium_part_*.md docs/lore_compendium.md 2>/dev/null | sort); do
            echo "- [$(basename "$f")](./$(basename "$f"))" >> docs/index.md
          done
          echo "" >> docs/index.md
          echo "## Index Files" >> docs/index.md
          echo "- [Lore Index](./lore_index.md)" >> docs/index.md
          echo "- [Machine Index (JSON)](./index.json)" >> docs/index.md
          echo "- [ZIP Snapshot](./lore_snapshot.zip)" >> docs/index.md

      - name: Commit Pages content (docs/)
        run: |
          git config user.name "snapshot-bot"
          git config user.email "snapshot-bot@users.noreply.github.com"
          if ls docs/lore_compendium_part_*.md >/dev/null 2>&1; then
            git add docs/lore_compendium_part_*.md
          elif [ -f docs/lore_compendium.md ]; then
            git add docs/lore_compendium.md
          fi
          git add docs/.nojekyll docs/index.md docs/lore_index.md docs/index.json docs/lore_snapshot.zip || true
          git commit -m "pages: update docs $(date -u +'%Y-%m-%d %H:%M:%S') UTC" || echo "No changes"
          git push || true

      - name: Upload build artifacts (manual download option)
        uses: actions/upload-artifact@v4
        with:
          name: lore-snapshot
          path: build/
